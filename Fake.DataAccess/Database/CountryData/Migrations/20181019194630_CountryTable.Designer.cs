// <auto-generated />
using Fake.DataAccess.Database.CountryData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Fake.DataAccess.Database.CountryData.Migrations
{
    [DbContext(typeof(CountryDataContext))]
    [Migration("20181019194630_CountryTable")]
    partial class CountryTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Fake.DataAccess.Database.CountryData.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Area");

                    b.Property<string>("Capital");

                    b.Property<string>("Continent");

                    b.Property<int>("CurrencyId");

                    b.Property<string>("Fips");

                    b.Property<string>("Iso");

                    b.Property<string>("Iso3");

                    b.Property<int>("IsoNumeric");

                    b.Property<string>("Name");

                    b.Property<string>("PhonePrefix");

                    b.Property<long>("Population");

                    b.Property<string>("PostCodeFormat");

                    b.Property<string>("PostCodeRegex");

                    b.Property<string>("TopLevelDomain");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.ToTable("Country");

                    b.HasData(
                        new { Id = 1, Area = 1580.0, Capital = "Mariehamn", Continent = "EU", CurrencyId = 15, Iso = "AX", Iso3 = "ALA", IsoNumeric = 248, Name = "Aland Islands", PhonePrefix = "+358-18", Population = 0L, PostCodeFormat = "#####", PostCodeRegex = "^(?:FI)*(\\d{5})$" },
                        new { Id = 2, Area = 2381740.0, Capital = "Algiers", Continent = "AF", CurrencyId = 14, Fips = "AG", Iso = "DZ", Iso3 = "DZA", IsoNumeric = 12, Name = "Algeria", PhonePrefix = "213", Population = 0L, PostCodeFormat = "#####", PostCodeRegex = "^(\\d{5})$" },
                        new { Id = 3, Area = 199.0, Capital = "Pago Pago", Continent = "OC", CurrencyId = 40, Fips = "AQ", Iso = "AS", Iso3 = "ASM", IsoNumeric = 16, Name = "American Samoa", PhonePrefix = "+1-684", Population = 0L, PostCodeFormat = "#####-####", PostCodeRegex = "96799" },
                        new { Id = 4, Area = 468.0, Capital = "Andorra la Vella", Continent = "EU", CurrencyId = 15, Fips = "AN", Iso = "AD", Iso3 = "AND", IsoNumeric = 20, Name = "Andorra", PhonePrefix = "376", Population = 0L, PostCodeFormat = "AD###", PostCodeRegex = "^(?:AD)*(\\d{3})$" },
                        new { Id = 5, Area = 2766890.0, Capital = "Buenos Aires", Continent = "SA", CurrencyId = 1, Fips = "AR", Iso = "AR", Iso3 = "ARG", IsoNumeric = 32, Name = "Argentina", PhonePrefix = "54", Population = 0L, PostCodeFormat = "@####@@@", PostCodeRegex = "^[A-Z]?\\d{4}[A-Z]{0,3}$" },
                        new { Id = 6, Area = 7686850.0, Capital = "Canberra", Continent = "OC", CurrencyId = 2, Fips = "AS", Iso = "AU", Iso3 = "AUS", IsoNumeric = 36, Name = "Australia", PhonePrefix = "61", Population = 0L, PostCodeFormat = "####", PostCodeRegex = "^(\\d{4})$" },
                        new { Id = 7, Area = 83858.0, Capital = "Vienna", Continent = "EU", CurrencyId = 15, Fips = "AU", Iso = "AT", Iso3 = "AUT", IsoNumeric = 40, Name = "Austria", PhonePrefix = "43", Population = 0L, PostCodeFormat = "####", PostCodeRegex = "^(\\d{4})$" },
                        new { Id = 8, Area = 144000.0, Capital = "Dhaka", Continent = "AS", CurrencyId = 3, Fips = "BG", Iso = "BD", Iso3 = "BGD", IsoNumeric = 50, Name = "Bangladesh", PhonePrefix = "880", Population = 0L, PostCodeFormat = "####", PostCodeRegex = "^(\\d{4})$" },
                        new { Id = 9, Area = 207600.0, Capital = "Minsk", Continent = "EU", CurrencyId = 7, Fips = "BO", Iso = "BY", Iso3 = "BLR", IsoNumeric = 112, Name = "Belarus", PhonePrefix = "375", Population = 0L, PostCodeFormat = "######", PostCodeRegex = "^(\\d{6})$" },
                        new { Id = 10, Area = 30510.0, Capital = "Brussels", Continent = "EU", CurrencyId = 15, Fips = "BE", Iso = "BE", Iso3 = "BEL", IsoNumeric = 56, Name = "Belgium", PhonePrefix = "32", Population = 0L, PostCodeFormat = "####", PostCodeRegex = "^(\\d{4})$" },
                        new { Id = 11, Area = 53.0, Capital = "Hamilton", Continent = "NA", CurrencyId = 5, Fips = "BD", Iso = "BM", Iso3 = "BMU", IsoNumeric = 60, Name = "Bermuda", PhonePrefix = "+1-441", Population = 0L, PostCodeFormat = "@@ ##", PostCodeRegex = "^([A-Z]{2}\\d{2})$" },
                        new { Id = 12, Area = 8511965.0, Capital = "Brasilia", Continent = "SA", CurrencyId = 6, Fips = "BR", Iso = "BR", Iso3 = "BRA", IsoNumeric = 76, Name = "Brazil", PhonePrefix = "55", Population = 0L, PostCodeFormat = "#####-###", PostCodeRegex = "^\\d{5}-\\d{3}$" },
                        new { Id = 13, Area = 110910.0, Capital = "Sofia", Continent = "EU", CurrencyId = 4, Fips = "BU", Iso = "BG", Iso3 = "BGR", IsoNumeric = 100, Name = "Bulgaria", PhonePrefix = "359", Population = 0L, PostCodeFormat = "####", PostCodeRegex = "^(\\d{4})$" },
                        new { Id = 14, Area = 9984670.0, Capital = "Ottawa", Continent = "NA", CurrencyId = 8, Fips = "CA", Iso = "CA", Iso3 = "CAN", IsoNumeric = 124, Name = "Canada", PhonePrefix = "1", Population = 0L, PostCodeFormat = "@#@ #@#", PostCodeRegex = "^([ABCEGHJKLMNPRSTVXY]\\d[ABCEGHJKLMNPRSTVWXYZ]) ?(\\d[ABCEGHJKLMNPRSTVWXYZ]\\d)$" },
                        new { Id = 15, Area = 1138910.0, Capital = "Bogota", Continent = "SA", CurrencyId = 9, Fips = "CO", Iso = "CO", Iso3 = "COL", IsoNumeric = 170, Name = "Colombia", PhonePrefix = "57", Population = 0L, PostCodeFormat = "######", PostCodeRegex = "^(\\d{6})$" },
                        new { Id = 16, Area = 51100.0, Capital = "San Jose", Continent = "NA", CurrencyId = 10, Fips = "CS", Iso = "CR", Iso3 = "CRI", IsoNumeric = 188, Name = "Costa Rica", PhonePrefix = "506", Population = 0L, PostCodeFormat = "#####", PostCodeRegex = "^(\\d{5})$" },
                        new { Id = 17, Area = 56542.0, Capital = "Zagreb", Continent = "EU", CurrencyId = 18, Fips = "HR", Iso = "HR", Iso3 = "HRV", IsoNumeric = 191, Name = "Croatia", PhonePrefix = "385", Population = 0L, PostCodeFormat = "#####", PostCodeRegex = "^(?:HR)*(\\d{5})$" },
                        new { Id = 18, Area = 78866.0, Capital = "Prague", Continent = "EU", CurrencyId = 11, Fips = "EZ", Iso = "CZ", Iso3 = "CZE", IsoNumeric = 203, Name = "Czechia", PhonePrefix = "420", Population = 0L, PostCodeFormat = "### ##", PostCodeRegex = "^\\d{3}\\s?\\d{2}$" },
                        new { Id = 19, Area = 43094.0, Capital = "Copenhagen", Continent = "EU", CurrencyId = 12, Fips = "DA", Iso = "DK", Iso3 = "DNK", IsoNumeric = 208, Name = "Denmark", PhonePrefix = "45", Population = 0L, PostCodeFormat = "####", PostCodeRegex = "^(\\d{4})$" },
                        new { Id = 20, Area = 48730.0, Capital = "Santo Domingo", Continent = "NA", CurrencyId = 13, Fips = "DR", Iso = "DO", Iso3 = "DOM", IsoNumeric = 214, Name = "Dominican Republic", PhonePrefix = "+1-809 and 1-829", Population = 0L, PostCodeFormat = "#####", PostCodeRegex = "^(\\d{5})$" },
                        new { Id = 21, Area = 1399.0, Capital = "Torshavn", Continent = "EU", CurrencyId = 12, Fips = "FO", Iso = "FO", Iso3 = "FRO", IsoNumeric = 234, Name = "Faroe Islands", PhonePrefix = "298", Population = 0L, PostCodeFormat = "###", PostCodeRegex = "^(?:FO)*(\\d{3})$" },
                        new { Id = 22, Area = 337030.0, Capital = "Helsinki", Continent = "EU", CurrencyId = 15, Fips = "FI", Iso = "FI", Iso3 = "FIN", IsoNumeric = 246, Name = "Finland", PhonePrefix = "358", Population = 0L, PostCodeFormat = "#####", PostCodeRegex = "^(?:FI)*(\\d{5})$" },
                        new { Id = 23, Area = 547030.0, Capital = "Paris", Continent = "EU", CurrencyId = 15, Fips = "FR", Iso = "FR", Iso3 = "FRA", IsoNumeric = 250, Name = "France", PhonePrefix = "33", Population = 0L, PostCodeFormat = "#####", PostCodeRegex = "^(\\d{5})$" },
                        new { Id = 24, Area = 91000.0, Capital = "Cayenne", Continent = "SA", CurrencyId = 15, Fips = "FG", Iso = "GF", Iso3 = "GUF", IsoNumeric = 254, Name = "French Guiana", PhonePrefix = "594", Population = 0L, PostCodeFormat = "#####", PostCodeRegex = "^((97|98)3\\d{2})$" },
                        new { Id = 25, Area = 357021.0, Capital = "Berlin", Continent = "EU", CurrencyId = 15, Fips = "GM", Iso = "DE", Iso3 = "DEU", IsoNumeric = 276, Name = "Germany", PhonePrefix = "49", Population = 0L, PostCodeFormat = "#####", PostCodeRegex = "^(\\d{5})$" },
                        new { Id = 26, Area = 2166086.0, Capital = "Nuuk", Continent = "NA", CurrencyId = 12, Fips = "GL", Iso = "GL", Iso3 = "GRL", IsoNumeric = 304, Name = "Greenland", PhonePrefix = "299", Population = 0L, PostCodeFormat = "####", PostCodeRegex = "^(\\d{4})$" },
                        new { Id = 27, Area = 1780.0, Capital = "Basse-Terre", Continent = "NA", CurrencyId = 15, Fips = "GP", Iso = "GP", Iso3 = "GLP", IsoNumeric = 312, Name = "Guadeloupe", PhonePrefix = "590", Population = 0L, PostCodeFormat = "#####", PostCodeRegex = "^((97|98)\\d{3})$" },
                        new { Id = 28, Area = 549.0, Capital = "Hagatna", Continent = "OC", CurrencyId = 40, Fips = "GQ", Iso = "GU", Iso3 = "GUM", IsoNumeric = 316, Name = "Guam", PhonePrefix = "+1-671", Population = 0L, PostCodeFormat = "969##", PostCodeRegex = "^(969\\d{2})$" },
                        new { Id = 29, Area = 108890.0, Capital = "Guatemala City", Continent = "NA", CurrencyId = 17, Fips = "GT", Iso = "GT", Iso3 = "GTM", IsoNumeric = 320, Name = "Guatemala", PhonePrefix = "502", Population = 0L, PostCodeFormat = "#####", PostCodeRegex = "^(\\d{5})$" },
                        new { Id = 30, Area = 78.0, Capital = "St Peter Port", Continent = "EU", CurrencyId = 16, Fips = "GK", Iso = "GG", Iso3 = "GGY", IsoNumeric = 831, Name = "Guernsey", PhonePrefix = "+44-1481", Population = 0L, PostCodeFormat = "@# #@@|@## #@@|@@# #@@|@@## #@@|@#@ #@@|@@#@ #@@|GIR0AA", PostCodeRegex = "^((?:(?:[A-PR-UWYZ][A-HK-Y]\\d[ABEHMNPRV-Y0-9]|[A-PR-UWYZ]\\d[A-HJKPS-UW0-9])\\s\\d[ABD-HJLNP-UW-Z]{2})|GIR\\s?0AA)$" },
                        new { Id = 31, Area = 93030.0, Capital = "Budapest", Continent = "EU", CurrencyId = 19, Fips = "HU", Iso = "HU", Iso3 = "HUN", IsoNumeric = 348, Name = "Hungary", PhonePrefix = "36", Population = 0L, PostCodeFormat = "####", PostCodeRegex = "^(\\d{4})$" },
                        new { Id = 32, Area = 103000.0, Capital = "Reykjavik", Continent = "EU", CurrencyId = 22, Fips = "IC", Iso = "IS", Iso3 = "ISL", IsoNumeric = 352, Name = "Iceland", PhonePrefix = "354", Population = 0L, PostCodeFormat = "###", PostCodeRegex = "^(\\d{3})$" },
                        new { Id = 33, Area = 3287590.0, Capital = "New Delhi", Continent = "AS", CurrencyId = 21, Fips = "IN", Iso = "IN", Iso3 = "IND", IsoNumeric = 356, Name = "India", PhonePrefix = "91", Population = 0L, PostCodeFormat = "######", PostCodeRegex = "^(\\d{6})$" },
                        new { Id = 34, Area = 70280.0, Capital = "Dublin", Continent = "EU", CurrencyId = 15, Fips = "EI", Iso = "IE", Iso3 = "IRL", IsoNumeric = 372, Name = "Ireland", PhonePrefix = "353", Population = 0L, PostCodeFormat = "@@@ @@@@", PostCodeRegex = "^[A-Z]\\d{2}$|^[A-Z]{3}[A-Z]{4}$" },
                        new { Id = 35, Area = 572.0, Capital = "Douglas", Continent = "EU", CurrencyId = 16, Fips = "IM", Iso = "IM", Iso3 = "IMN", IsoNumeric = 833, Name = "Isle of Man", PhonePrefix = "+44-1624", Population = 0L, PostCodeFormat = "@# #@@|@## #@@|@@# #@@|@@## #@@|@#@ #@@|@@#@ #@@|GIR0AA", PostCodeRegex = "^((?:(?:[A-PR-UWYZ][A-HK-Y]\\d[ABEHMNPRV-Y0-9]|[A-PR-UWYZ]\\d[A-HJKPS-UW0-9])\\s\\d[ABD-HJLNP-UW-Z]{2})|GIR\\s?0AA)$" },
                        new { Id = 36, Area = 301230.0, Capital = "Rome", Continent = "EU", CurrencyId = 15, Fips = "IT", Iso = "IT", Iso3 = "ITA", IsoNumeric = 380, Name = "Italy", PhonePrefix = "39", Population = 0L, PostCodeFormat = "#####", PostCodeRegex = "^(\\d{5})$" },
                        new { Id = 37, Area = 377835.0, Capital = "Tokyo", Continent = "AS", CurrencyId = 23, Fips = "JA", Iso = "JP", Iso3 = "JPN", IsoNumeric = 392, Name = "Japan", PhonePrefix = "81", Population = 0L, PostCodeFormat = "###-####", PostCodeRegex = "^\\d{3}-\\d{4}$" },
                        new { Id = 38, Area = 116.0, Capital = "Saint Helier", Continent = "EU", CurrencyId = 16, Fips = "JE", Iso = "JE", Iso3 = "JEY", IsoNumeric = 832, Name = "Jersey", PhonePrefix = "+44-1534", Population = 0L, PostCodeFormat = "@# #@@|@## #@@|@@# #@@|@@## #@@|@#@ #@@|@@#@ #@@|GIR0AA", PostCodeRegex = "^((?:(?:[A-PR-UWYZ][A-HK-Y]\\d[ABEHMNPRV-Y0-9]|[A-PR-UWYZ]\\d[A-HJKPS-UW0-9])\\s\\d[ABD-HJLNP-UW-Z]{2})|GIR\\s?0AA)$" },
                        new { Id = 39, Area = 64589.0, Capital = "Riga", Continent = "EU", CurrencyId = 15, Fips = "LG", Iso = "LV", Iso3 = "LVA", IsoNumeric = 428, Name = "Latvia", PhonePrefix = "371", Population = 0L, PostCodeFormat = "LV-####", PostCodeRegex = "^(?:LV)*(\\d{4})$" },
                        new { Id = 40, Area = 160.0, Capital = "Vaduz", Continent = "EU", CurrencyId = 20, Fips = "LS", Iso = "LI", Iso3 = "LIE", IsoNumeric = 438, Name = "Liechtenstein", PhonePrefix = "423", Population = 0L, PostCodeFormat = "####", PostCodeRegex = "^(\\d{4})$" },
                        new { Id = 41, Area = 65200.0, Capital = "Vilnius", Continent = "EU", CurrencyId = 15, Fips = "LH", Iso = "LT", Iso3 = "LTU", IsoNumeric = 440, Name = "Lithuania", PhonePrefix = "370", Population = 0L, PostCodeFormat = "LT-#####", PostCodeRegex = "^(?:LT)*(\\d{5})$" },
                        new { Id = 42, Area = 2586.0, Capital = "Luxembourg", Continent = "EU", CurrencyId = 15, Fips = "LU", Iso = "LU", Iso3 = "LUX", IsoNumeric = 442, Name = "Luxembourg", PhonePrefix = "352", Population = 0L, PostCodeFormat = "L-####", PostCodeRegex = "^(?:L-)?\\d{4}$" },
                        new { Id = 43, Area = 25333.0, Capital = "Skopje", Continent = "EU", CurrencyId = 26, Fips = "MK", Iso = "MK", Iso3 = "MKD", IsoNumeric = 807, Name = "Macedonia", PhonePrefix = "389", Population = 0L, PostCodeFormat = "####", PostCodeRegex = "^(\\d{4})$" },
                        new { Id = 44, Area = 329750.0, Capital = "Kuala Lumpur", Continent = "AS", CurrencyId = 28, Fips = "MY", Iso = "MY", Iso3 = "MYS", IsoNumeric = 458, Name = "Malaysia", PhonePrefix = "60", Population = 0L, PostCodeFormat = "#####", PostCodeRegex = "^(\\d{5})$" },
                        new { Id = 45, Area = 316.0, Capital = "Valletta", Continent = "EU", CurrencyId = 15, Fips = "MT", Iso = "MT", Iso3 = "MLT", IsoNumeric = 470, Name = "Malta", PhonePrefix = "356", Population = 0L, PostCodeFormat = "@@@ ####", PostCodeRegex = "^[A-Z]{3}\\s?\\d{4}$" },
                        new { Id = 46, Area = 181.3, Capital = "Majuro", Continent = "OC", CurrencyId = 40, Fips = "RM", Iso = "MH", Iso3 = "MHL", IsoNumeric = 584, Name = "Marshall Islands", PhonePrefix = "692", Population = 0L, PostCodeFormat = "#####-####", PostCodeRegex = "^969\\d{2}(-\\d{4})$" },
                        new { Id = 47, Area = 1100.0, Capital = "Fort-de-France", Continent = "NA", CurrencyId = 15, Fips = "MB", Iso = "MQ", Iso3 = "MTQ", IsoNumeric = 474, Name = "Martinique", PhonePrefix = "596", Population = 0L, PostCodeFormat = "#####", PostCodeRegex = "^(\\d{5})$" },
                        new { Id = 48, Area = 374.0, Capital = "Mamoudzou", Continent = "AF", CurrencyId = 15, Fips = "MF", Iso = "YT", Iso3 = "MYT", IsoNumeric = 175, Name = "Mayotte", PhonePrefix = "262", Population = 0L, PostCodeFormat = "#####", PostCodeRegex = "^(\\d{5})$" },
                        new { Id = 49, Area = 1972550.0, Capital = "Mexico City", Continent = "NA", CurrencyId = 27, Fips = "MX", Iso = "MX", Iso3 = "MEX", IsoNumeric = 484, Name = "Mexico", PhonePrefix = "52", Population = 0L, PostCodeFormat = "#####", PostCodeRegex = "^(\\d{5})$" },
                        new { Id = 50, Area = 702.0, Capital = "Palikir", Continent = "OC", CurrencyId = 40, Fips = "FM", Iso = "FM", Iso3 = "FSM", IsoNumeric = 583, Name = "Micronesia", PhonePrefix = "691", Population = 0L, PostCodeFormat = "#####", PostCodeRegex = "^(\\d{5})$" },
                        new { Id = 51, Area = 33843.0, Capital = "Chisinau", Continent = "EU", CurrencyId = 25, Fips = "MD", Iso = "MD", Iso3 = "MDA", IsoNumeric = 498, Name = "Moldova", PhonePrefix = "373", Population = 0L, PostCodeFormat = "MD-####", PostCodeRegex = "^MD-\\d{4}$" },
                        new { Id = 52, Area = 1.95, Capital = "Monaco", Continent = "EU", CurrencyId = 15, Fips = "MN", Iso = "MC", Iso3 = "MCO", IsoNumeric = 492, Name = "Monaco", PhonePrefix = "377", Population = 0L, PostCodeFormat = "#####", PostCodeRegex = "^(\\d{5})$" },
                        new { Id = 53, Area = 41526.0, Capital = "Amsterdam", Continent = "EU", CurrencyId = 15, Fips = "NL", Iso = "NL", Iso3 = "NLD", IsoNumeric = 528, Name = "Netherlands", PhonePrefix = "31", Population = 0L, PostCodeFormat = "#### @@", PostCodeRegex = "^(\\d{4}[A-Z]{2})$" },
                        new { Id = 54, Area = 19060.0, Capital = "Noumea", Continent = "OC", CurrencyId = 42, Fips = "NC", Iso = "NC", Iso3 = "NCL", IsoNumeric = 540, Name = "New Caledonia", PhonePrefix = "687", Population = 0L, PostCodeFormat = "#####", PostCodeRegex = "^(\\d{5})$" },
                        new { Id = 55, Area = 268680.0, Capital = "Wellington", Continent = "OC", CurrencyId = 30, Fips = "NZ", Iso = "NZ", Iso3 = "NZL", IsoNumeric = 554, Name = "New Zealand", PhonePrefix = "64", Population = 0L, PostCodeFormat = "####", PostCodeRegex = "^(\\d{4})$" },
                        new { Id = 56, Area = 477.0, Capital = "Saipan", Continent = "OC", CurrencyId = 40, Fips = "CQ", Iso = "MP", Iso3 = "MNP", IsoNumeric = 580, Name = "Northern Mariana Islands", PhonePrefix = "+1-670", Population = 0L, PostCodeFormat = "#####", PostCodeRegex = "^9695\\d{1}$" },
                        new { Id = 57, Area = 324220.0, Capital = "Oslo", Continent = "EU", CurrencyId = 29, Fips = "NO", Iso = "NO", Iso3 = "NOR", IsoNumeric = 578, Name = "Norway", PhonePrefix = "47", Population = 0L, PostCodeFormat = "####", PostCodeRegex = "^(\\d{4})$" },
                        new { Id = 58, Area = 803940.0, Capital = "Islamabad", Continent = "AS", CurrencyId = 32, Fips = "PK", Iso = "PK", Iso3 = "PAK", IsoNumeric = 586, Name = "Pakistan", PhonePrefix = "92", Population = 0L, PostCodeFormat = "#####", PostCodeRegex = "^(\\d{5})$" },
                        new { Id = 59, Area = 458.0, Capital = "Melekeok", Continent = "OC", CurrencyId = 40, Fips = "PS", Iso = "PW", Iso3 = "PLW", IsoNumeric = 585, Name = "Palau", PhonePrefix = "680", Population = 0L, PostCodeFormat = "96940", PostCodeRegex = "^(96940)$" },
                        new { Id = 60, Area = 300000.0, Capital = "Manila", Continent = "AS", CurrencyId = 31, Fips = "RP", Iso = "PH", Iso3 = "PHL", IsoNumeric = 608, Name = "Philippines", PhonePrefix = "63", Population = 0L, PostCodeFormat = "####", PostCodeRegex = "^(\\d{4})$" },
                        new { Id = 61, Area = 312685.0, Capital = "Warsaw", Continent = "EU", CurrencyId = 33, Fips = "PL", Iso = "PL", Iso3 = "POL", IsoNumeric = 616, Name = "Poland", PhonePrefix = "48", Population = 0L, PostCodeFormat = "##-###", PostCodeRegex = "^\\d{2}-\\d{3}$" },
                        new { Id = 62, Area = 92391.0, Capital = "Lisbon", Continent = "EU", CurrencyId = 15, Fips = "PO", Iso = "PT", Iso3 = "PRT", IsoNumeric = 620, Name = "Portugal", PhonePrefix = "351", Population = 0L, PostCodeFormat = "####-###", PostCodeRegex = "^\\d{4}-\\d{3}\\s?[a-zA-Z]{0,25}$" },
                        new { Id = 63, Area = 9104.0, Capital = "San Juan", Continent = "NA", CurrencyId = 40, Fips = "RQ", Iso = "PR", Iso3 = "PRI", IsoNumeric = 630, Name = "Puerto Rico", PhonePrefix = "+1-787 and 1-939", Population = 0L, PostCodeFormat = "#####-####", PostCodeRegex = "^00[679]\\d{2}(?:-\\d{4})?$" },
                        new { Id = 64, Area = 2517.0, Capital = "Saint-Denis", Continent = "AF", CurrencyId = 15, Fips = "RE", Iso = "RE", Iso3 = "REU", IsoNumeric = 638, Name = "Reunion", PhonePrefix = "262", Population = 0L, PostCodeFormat = "#####", PostCodeRegex = "^((97|98)(4|7|8)\\d{2})$" },
                        new { Id = 65, Area = 237500.0, Capital = "Bucharest", Continent = "EU", CurrencyId = 34, Fips = "RO", Iso = "RO", Iso3 = "ROU", IsoNumeric = 642, Name = "Romania", PhonePrefix = "40", Population = 0L, PostCodeFormat = "######", PostCodeRegex = "^(\\d{6})$" },
                        new { Id = 66, Area = 17100000.0, Capital = "Moscow", Continent = "EU", CurrencyId = 35, Fips = "RS", Iso = "RU", Iso3 = "RUS", IsoNumeric = 643, Name = "Russia", PhonePrefix = "7", Population = 0L, PostCodeFormat = "######", PostCodeRegex = "^(\\d{6})$" },
                        new { Id = 67, Area = 242.0, Capital = "Saint-Pierre", Continent = "NA", CurrencyId = 15, Fips = "SB", Iso = "PM", Iso3 = "SPM", IsoNumeric = 666, Name = "Saint Pierre and Miquelon", PhonePrefix = "508", Population = 0L, PostCodeFormat = "#####", PostCodeRegex = "^(97500)$" },
                        new { Id = 68, Area = 61.2, Capital = "San Marino", Continent = "EU", CurrencyId = 15, Fips = "SM", Iso = "SM", Iso3 = "SMR", IsoNumeric = 674, Name = "San Marino", PhonePrefix = "378", Population = 0L, PostCodeFormat = "4789#", PostCodeRegex = "^(4789\\d)$" },
                        new { Id = 69, Area = 48845.0, Capital = "Bratislava", Continent = "EU", CurrencyId = 15, Fips = "LO", Iso = "SK", Iso3 = "SVK", IsoNumeric = 703, Name = "Slovakia", PhonePrefix = "421", Population = 0L, PostCodeFormat = "### ##", PostCodeRegex = "^\\d{3}\\s?\\d{2}$" },
                        new { Id = 70, Area = 20273.0, Capital = "Ljubljana", Continent = "EU", CurrencyId = 15, Fips = "SI", Iso = "SI", Iso3 = "SVN", IsoNumeric = 705, Name = "Slovenia", PhonePrefix = "386", Population = 0L, PostCodeFormat = "####", PostCodeRegex = "^(?:SI)*(\\d{4})$" },
                        new { Id = 71, Area = 1219912.0, Capital = "Pretoria", Continent = "AF", CurrencyId = 43, Fips = "SF", Iso = "ZA", Iso3 = "ZAF", IsoNumeric = 710, Name = "South Africa", PhonePrefix = "27", Population = 0L, PostCodeFormat = "####", PostCodeRegex = "^(\\d{4})$" },
                        new { Id = 72, Area = 504782.0, Capital = "Madrid", Continent = "EU", CurrencyId = 15, Fips = "SP", Iso = "ES", Iso3 = "ESP", IsoNumeric = 724, Name = "Spain", PhonePrefix = "34", Population = 0L, PostCodeFormat = "#####", PostCodeRegex = "^(\\d{5})$" },
                        new { Id = 73, Area = 65610.0, Capital = "Colombo", Continent = "AS", CurrencyId = 24, Fips = "CE", Iso = "LK", Iso3 = "LKA", IsoNumeric = 144, Name = "Sri Lanka", PhonePrefix = "94", Population = 0L, PostCodeFormat = "#####", PostCodeRegex = "^(\\d{5})$" },
                        new { Id = 74, Area = 62049.0, Capital = "Longyearbyen", Continent = "EU", CurrencyId = 29, Fips = "SV", Iso = "SJ", Iso3 = "SJM", IsoNumeric = 744, Name = "Svalbard and Jan Mayen", PhonePrefix = "47", Population = 0L, PostCodeFormat = "####", PostCodeRegex = "^(\\d{4})$" },
                        new { Id = 75, Area = 449964.0, Capital = "Stockholm", Continent = "EU", CurrencyId = 36, Fips = "SW", Iso = "SE", Iso3 = "SWE", IsoNumeric = 752, Name = "Sweden", PhonePrefix = "46", Population = 0L, PostCodeFormat = "### ##", PostCodeRegex = "^(?:SE)?\\d{3}\\s\\d{2}$" },
                        new { Id = 76, Area = 41290.0, Capital = "Bern", Continent = "EU", CurrencyId = 20, Fips = "SZ", Iso = "CH", Iso3 = "CHE", IsoNumeric = 756, Name = "Switzerland", PhonePrefix = "41", Population = 0L, PostCodeFormat = "####", PostCodeRegex = "^(\\d{4})$" },
                        new { Id = 77, Area = 514000.0, Capital = "Bangkok", Continent = "AS", CurrencyId = 37, Fips = "TH", Iso = "TH", Iso3 = "THA", IsoNumeric = 764, Name = "Thailand", PhonePrefix = "66", Population = 0L, PostCodeFormat = "#####", PostCodeRegex = "^(\\d{5})$" },
                        new { Id = 78, Area = 780580.0, Capital = "Ankara", Continent = "AS", CurrencyId = 38, Fips = "TU", Iso = "TR", Iso3 = "TUR", IsoNumeric = 792, Name = "Turkey", PhonePrefix = "90", Population = 0L, PostCodeFormat = "#####", PostCodeRegex = "^(\\d{5})$" },
                        new { Id = 79, Area = 352.0, Capital = "Charlotte Amalie", Continent = "NA", CurrencyId = 40, Fips = "VQ", Iso = "VI", Iso3 = "VIR", IsoNumeric = 850, Name = "U.S. Virgin Islands", PhonePrefix = "+1-340", Population = 0L, PostCodeFormat = "#####-####", PostCodeRegex = "^008\\d{2}(?:-\\d{4})?$" },
                        new { Id = 80, Area = 603700.0, Capital = "Kyiv", Continent = "EU", CurrencyId = 39, Fips = "UP", Iso = "UA", Iso3 = "UKR", IsoNumeric = 804, Name = "Ukraine", PhonePrefix = "380", Population = 0L, PostCodeFormat = "#####", PostCodeRegex = "^(\\d{5})$" },
                        new { Id = 81, Area = 244820.0, Capital = "London", Continent = "EU", CurrencyId = 16, Fips = "UK", Iso = "GB", Iso3 = "GBR", IsoNumeric = 826, Name = "United Kingdom", PhonePrefix = "44", Population = 0L, PostCodeFormat = "@# #@@|@## #@@|@@# #@@|@@## #@@|@#@ #@@|@@#@ #@@|GIR0AA", PostCodeRegex = "^([Gg][Ii][Rr] 0[Aa]{2})|((([A-Za-z][0-9]{1,2})|(([A-Za-z][A-Ha-hJ-Yj-y][0-9]{1,2})|(([A-Za-z][0-9][A-Za-z])|([A-Za-z][A-Ha-hJ-Yj-y][0-9]?[A-Za-z])))) [0-9][A-Za-z]{2})$" },
                        new { Id = 82, Area = 9629091.0, Capital = "Washington", Continent = "NA", CurrencyId = 40, Fips = "US", Iso = "US", Iso3 = "USA", IsoNumeric = 840, Name = "United States", PhonePrefix = "1", Population = 0L, PostCodeFormat = "#####-####", PostCodeRegex = "^\\d{5}(-\\d{4})?$" },
                        new { Id = 83, Area = 176220.0, Capital = "Montevideo", Continent = "SA", CurrencyId = 41, Fips = "UY", Iso = "UY", Iso3 = "URY", IsoNumeric = 858, Name = "Uruguay", PhonePrefix = "598", Population = 0L, PostCodeFormat = "#####", PostCodeRegex = "^(\\d{5})$" },
                        new { Id = 84, Area = 0.44, Capital = "Vatican City", Continent = "EU", CurrencyId = 15, Fips = "VT", Iso = "VA", Iso3 = "VAT", IsoNumeric = 336, Name = "Vatican", PhonePrefix = "379", Population = 0L, PostCodeFormat = "#####", PostCodeRegex = "^(\\d{5})$" },
                        new { Id = 85, Area = 274.0, Capital = "Mata Utu", Continent = "OC", CurrencyId = 42, Fips = "WF", Iso = "WF", Iso3 = "WLF", IsoNumeric = 876, Name = "Wallis and Futuna", PhonePrefix = "681", Population = 0L, PostCodeFormat = "#####", PostCodeRegex = "^(986\\d{2})$" }
                    );
                });

            modelBuilder.Entity("Fake.DataAccess.Database.CountryData.Models.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Currencies");

                    b.HasData(
                        new { Id = 1, Code = "ARS", Name = "Peso" },
                        new { Id = 2, Code = "AUD", Name = "Dollar" },
                        new { Id = 3, Code = "BDT", Name = "Taka" },
                        new { Id = 4, Code = "BGN", Name = "Lev" },
                        new { Id = 5, Code = "BMD", Name = "Dollar" },
                        new { Id = 6, Code = "BRL", Name = "Real" },
                        new { Id = 7, Code = "BYN", Name = "Belarusian ruble" },
                        new { Id = 8, Code = "CAD", Name = "Dollar" },
                        new { Id = 9, Code = "COP", Name = "Peso" },
                        new { Id = 10, Code = "CRC", Name = "Colon" },
                        new { Id = 11, Code = "CZK", Name = "Koruna" },
                        new { Id = 12, Code = "DKK", Name = "Krone" },
                        new { Id = 13, Code = "DOP", Name = "Peso" },
                        new { Id = 14, Code = "DZD", Name = "Dinar" },
                        new { Id = 15, Code = "EUR", Name = "Euro" },
                        new { Id = 16, Code = "GBP", Name = "Pound" },
                        new { Id = 17, Code = "GTQ", Name = "Quetzal" },
                        new { Id = 18, Code = "HRK", Name = "Kuna" },
                        new { Id = 19, Code = "HUF", Name = "Forint" },
                        new { Id = 20, Code = "CHF", Name = "Franc" },
                        new { Id = 21, Code = "INR", Name = "Rupee" },
                        new { Id = 22, Code = "ISK", Name = "Krona" },
                        new { Id = 23, Code = "JPY", Name = "Yen" },
                        new { Id = 24, Code = "LKR", Name = "Rupee" },
                        new { Id = 25, Code = "MDL", Name = "Leu" },
                        new { Id = 26, Code = "MKD", Name = "Denar" },
                        new { Id = 27, Code = "MXN", Name = "Peso" },
                        new { Id = 28, Code = "MYR", Name = "Ringgit" },
                        new { Id = 29, Code = "NOK", Name = "Krone" },
                        new { Id = 30, Code = "NZD", Name = "Dollar" },
                        new { Id = 31, Code = "PHP", Name = "Peso" },
                        new { Id = 32, Code = "PKR", Name = "Rupee" },
                        new { Id = 33, Code = "PLN", Name = "Zloty" },
                        new { Id = 34, Code = "RON", Name = "Leu" },
                        new { Id = 35, Code = "RUB", Name = "Ruble" },
                        new { Id = 36, Code = "SEK", Name = "Krona" },
                        new { Id = 37, Code = "THB", Name = "Baht" },
                        new { Id = 38, Code = "TRY", Name = "Lira" },
                        new { Id = 39, Code = "UAH", Name = "Hryvnia" },
                        new { Id = 40, Code = "USD", Name = "Dollar" },
                        new { Id = 41, Code = "UYU", Name = "Peso" },
                        new { Id = 42, Code = "XPF", Name = "Franc" },
                        new { Id = 43, Code = "ZAR", Name = "Rand" }
                    );
                });

            modelBuilder.Entity("Fake.DataAccess.Database.CountryData.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new { Id = 1, Code = "abx" },
                        new { Id = 2, Code = "ady" },
                        new { Id = 3, Code = "af" },
                        new { Id = 4, Code = "akl" },
                        new { Id = 5, Code = "ar-DZ" },
                        new { Id = 6, Code = "as" },
                        new { Id = 7, Code = "av" },
                        new { Id = 8, Code = "az" },
                        new { Id = 9, Code = "ba" },
                        new { Id = 10, Code = "bcl" },
                        new { Id = 11, Code = "be" },
                        new { Id = 12, Code = "bg" },
                        new { Id = 13, Code = "bh" },
                        new { Id = 14, Code = "bik" },
                        new { Id = 15, Code = "bn" },
                        new { Id = 16, Code = "bn-BD" },
                        new { Id = 17, Code = "br" },
                        new { Id = 18, Code = "brh" },
                        new { Id = 19, Code = "bua" },
                        new { Id = 20, Code = "ca" },
                        new { Id = 21, Code = "cau" },
                        new { Id = 22, Code = "cbk" },
                        new { Id = 23, Code = "ce" },
                        new { Id = 24, Code = "ceb" },
                        new { Id = 25, Code = "co" },
                        new { Id = 26, Code = "cs" },
                        new { Id = 27, Code = "cv" },
                        new { Id = 28, Code = "cy-GB" },
                        new { Id = 29, Code = "da" },
                        new { Id = 30, Code = "da-DK" },
                        new { Id = 31, Code = "da-FO" },
                        new { Id = 32, Code = "da-GL" },
                        new { Id = 33, Code = "de" },
                        new { Id = 34, Code = "de-AT" },
                        new { Id = 35, Code = "de-BE" },
                        new { Id = 36, Code = "de-DK" },
                        new { Id = 37, Code = "de-CH" },
                        new { Id = 38, Code = "de-IT" },
                        new { Id = 39, Code = "de-LI" },
                        new { Id = 40, Code = "de-LU" },
                        new { Id = 41, Code = "diq" },
                        new { Id = 42, Code = "doi" },
                        new { Id = 43, Code = "en" },
                        new { Id = 44, Code = "en-AS" },
                        new { Id = 45, Code = "en-AU" },
                        new { Id = 46, Code = "en-BM" },
                        new { Id = 47, Code = "en-CA" },
                        new { Id = 48, Code = "en-FM" },
                        new { Id = 49, Code = "en-GB" },
                        new { Id = 50, Code = "en-GU" },
                        new { Id = 51, Code = "en-IE" },
                        new { Id = 52, Code = "en-IN" },
                        new { Id = 53, Code = "en-MH" },
                        new { Id = 54, Code = "en-MP" },
                        new { Id = 55, Code = "en-MT" },
                        new { Id = 56, Code = "en-NZ" },
                        new { Id = 57, Code = "en-PH" },
                        new { Id = 58, Code = "en-PK" },
                        new { Id = 59, Code = "en-PR" },
                        new { Id = 60, Code = "en-PW" },
                        new { Id = 61, Code = "en-US" },
                        new { Id = 62, Code = "en-VI" },
                        new { Id = 63, Code = "en-ZA" },
                        new { Id = 64, Code = "es" },
                        new { Id = 65, Code = "es-AR" },
                        new { Id = 66, Code = "es-CO" },
                        new { Id = 67, Code = "es-CR" },
                        new { Id = 68, Code = "es-DO" },
                        new { Id = 69, Code = "es-ES" },
                        new { Id = 70, Code = "es-GT" },
                        new { Id = 71, Code = "es-MX" },
                        new { Id = 72, Code = "es-PR" },
                        new { Id = 73, Code = "es-US" },
                        new { Id = 74, Code = "es-UY" },
                        new { Id = 75, Code = "eu" },
                        new { Id = 76, Code = "fi" },
                        new { Id = 77, Code = "fi-FI" },
                        new { Id = 78, Code = "fil" },
                        new { Id = 79, Code = "fi-SE" },
                        new { Id = 80, Code = "fo" },
                        new { Id = 81, Code = "fr" },
                        new { Id = 82, Code = "fr-BE" },
                        new { Id = 83, Code = "fr-CA" },
                        new { Id = 84, Code = "fr-FR" },
                        new { Id = 85, Code = "fr-GF" },
                        new { Id = 86, Code = "fr-GP" },
                        new { Id = 87, Code = "fr-CH" },
                        new { Id = 88, Code = "fr-IT" },
                        new { Id = 89, Code = "fr-LU" },
                        new { Id = 90, Code = "fr-MC" },
                        new { Id = 91, Code = "fr-MQ" },
                        new { Id = 92, Code = "fr-NC" },
                        new { Id = 93, Code = "frp" },
                        new { Id = 94, Code = "fr-PM" },
                        new { Id = 95, Code = "fr-RE" },
                        new { Id = 96, Code = "fr-WF" },
                        new { Id = 97, Code = "fr-YT" },
                        new { Id = 98, Code = "fud" },
                        new { Id = 99, Code = "fy-NL" },
                        new { Id = 100, Code = "gag" },
                        new { Id = 101, Code = "ga-IE" },
                        new { Id = 102, Code = "gd" },
                        new { Id = 103, Code = "gl" },
                        new { Id = 104, Code = "gn" },
                        new { Id = 105, Code = "gu" },
                        new { Id = 106, Code = "gv" },
                        new { Id = 107, Code = "haw" },
                        new { Id = 108, Code = "hi" },
                        new { Id = 109, Code = "hil" },
                        new { Id = 110, Code = "hr" },
                        new { Id = 111, Code = "hr-HR" },
                        new { Id = 112, Code = "hu" },
                        new { Id = 113, Code = "hu-HU" },
                        new { Id = 114, Code = "ch-GU" },
                        new { Id = 115, Code = "chk" },
                        new { Id = 116, Code = "chm" },
                        new { Id = 117, Code = "ch-MP" },
                        new { Id = 118, Code = "ibg" },
                        new { Id = 119, Code = "ilo" },
                        new { Id = 120, Code = "inc" },
                        new { Id = 121, Code = "inh" },
                        new { Id = 122, Code = "is" },
                        new { Id = 123, Code = "it" },
                        new { Id = 124, Code = "it-CH" },
                        new { Id = 125, Code = "it-IT" },
                        new { Id = 126, Code = "it-SM" },
                        new { Id = 127, Code = "iu" },
                        new { Id = 128, Code = "ja" },
                        new { Id = 129, Code = "kbd" },
                        new { Id = 130, Code = "kl" },
                        new { Id = 131, Code = "kn" },
                        new { Id = 132, Code = "kok" },
                        new { Id = 133, Code = "kos" },
                        new { Id = 134, Code = "kpg" },
                        new { Id = 135, Code = "krc" },
                        new { Id = 136, Code = "krj" },
                        new { Id = 137, Code = "ks" },
                        new { Id = 138, Code = "ku" },
                        new { Id = 139, Code = "kv" },
                        new { Id = 140, Code = "la" },
                        new { Id = 141, Code = "lb" },
                        new { Id = 142, Code = "lt" },
                        new { Id = 143, Code = "lus" },
                        new { Id = 144, Code = "lv" },
                        new { Id = 145, Code = "mdf" },
                        new { Id = 146, Code = "mdh" },
                        new { Id = 147, Code = "mh" },
                        new { Id = 148, Code = "mi" },
                        new { Id = 149, Code = "mk" },
                        new { Id = 150, Code = "ml" },
                        new { Id = 151, Code = "mni" },
                        new { Id = 152, Code = "mns" },
                        new { Id = 153, Code = "mr" },
                        new { Id = 154, Code = "mrw" },
                        new { Id = 155, Code = "msb" },
                        new { Id = 156, Code = "ms-MY" },
                        new { Id = 157, Code = "mt" },
                        new { Id = 158, Code = "mta" },
                        new { Id = 159, Code = "mwl" },
                        new { Id = 160, Code = "myv" },
                        new { Id = 161, Code = "nb" },
                        new { Id = 162, Code = "ne" },
                        new { Id = 163, Code = "nkr" },
                        new { Id = 164, Code = "nl-BE" },
                        new { Id = 165, Code = "nl-NL" },
                        new { Id = 166, Code = "nn" },
                        new { Id = 167, Code = "no" },
                        new { Id = 168, Code = "nog" },
                        new { Id = 169, Code = "nr" },
                        new { Id = 170, Code = "nrf" },
                        new { Id = 171, Code = "nso" },
                        new { Id = 172, Code = "oc" },
                        new { Id = 173, Code = "or" },
                        new { Id = 174, Code = "pa" },
                        new { Id = 175, Code = "pag" },
                        new { Id = 176, Code = "pam" },
                        new { Id = 177, Code = "pau" },
                        new { Id = 178, Code = "pl" },
                        new { Id = 179, Code = "pon" },
                        new { Id = 180, Code = "ps" },
                        new { Id = 181, Code = "pt" },
                        new { Id = 182, Code = "pt-BR" },
                        new { Id = 183, Code = "pt-PT" },
                        new { Id = 184, Code = "rm" },
                        new { Id = 185, Code = "rmm" },
                        new { Id = 186, Code = "ro" },
                        new { Id = 187, Code = "rom" },
                        new { Id = 188, Code = "ru" },
                        new { Id = 189, Code = "ru-UA" },
                        new { Id = 190, Code = "sa" },
                        new { Id = 191, Code = "sah" },
                        new { Id = 192, Code = "sat" },
                        new { Id = 193, Code = "sc" },
                        new { Id = 194, Code = "sd" },
                        new { Id = 195, Code = "se" },
                        new { Id = 196, Code = "sgd" },
                        new { Id = 197, Code = "sh" },
                        new { Id = 198, Code = "si" },
                        new { Id = 199, Code = "sit" },
                        new { Id = 200, Code = "sk" },
                        new { Id = 201, Code = "sl" },
                        new { Id = 202, Code = "sm" },
                        new { Id = 203, Code = "sma" },
                        new { Id = 204, Code = "smn" },
                        new { Id = 205, Code = "sov" },
                        new { Id = 206, Code = "sq" },
                        new { Id = 207, Code = "sr" },
                        new { Id = 208, Code = "ss" },
                        new { Id = 209, Code = "st" },
                        new { Id = 210, Code = "sv" },
                        new { Id = 211, Code = "sv-AX" },
                        new { Id = 212, Code = "sv-FI" },
                        new { Id = 213, Code = "sv-SE" },
                        new { Id = 214, Code = "ta" },
                        new { Id = 215, Code = "te" },
                        new { Id = 216, Code = "tgl" },
                        new { Id = 217, Code = "th" },
                        new { Id = 218, Code = "tl" },
                        new { Id = 219, Code = "tn" },
                        new { Id = 220, Code = "to" },
                        new { Id = 221, Code = "tox" },
                        new { Id = 222, Code = "tr" },
                        new { Id = 223, Code = "tr-BG" },
                        new { Id = 224, Code = "tr-TR" },
                        new { Id = 225, Code = "ts" },
                        new { Id = 226, Code = "tsg" },
                        new { Id = 227, Code = "tt" },
                        new { Id = 228, Code = "tut" },
                        new { Id = 229, Code = "tyv" },
                        new { Id = 230, Code = "udm" },
                        new { Id = 231, Code = "uk" },
                        new { Id = 232, Code = "uli" },
                        new { Id = 233, Code = "ur" },
                        new { Id = 234, Code = "ur-PK" },
                        new { Id = 235, Code = "ve" },
                        new { Id = 236, Code = "war" },
                        new { Id = 237, Code = "wls" },
                        new { Id = 238, Code = "woe" },
                        new { Id = 239, Code = "xal" },
                        new { Id = 240, Code = "xh" },
                        new { Id = 241, Code = "yap" },
                        new { Id = 242, Code = "yka" },
                        new { Id = 243, Code = "zh" },
                        new { Id = 244, Code = "zu" }
                    );
                });

            modelBuilder.Entity("Fake.DataAccess.Database.CountryData.Models.Country", b =>
                {
                    b.HasOne("Fake.DataAccess.Database.CountryData.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
